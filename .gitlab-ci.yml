# first, install Cypress, then run all tests (in parallel)
stages:
  - build
  - install
  - test

# to cache both npm modules and Cypress binary we use environment variables
# to point at the folders we can list as paths in "cache" job settings
variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

# cache using branch name
# https://gitlab.com/help/ci/caching/index.md
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - cache/Cypress
    - node_modules

#services:
#  - docker:dind
#
#before_script:
#  - docker info
#  - docker-compose --version

build image:
  image: tmaier/docker-compose:latest
  stage: build
  script:
    - docker info
    - docker-compose --version
    - docker-compose -f docker-compose.full.yml up
# this job installs NPM dependencies and Cypress
install:
  image: cypress/browsers:node14.15.0-chrome86-ff82
  stage: build

  script:
    - npm ci
    # check Cypress binary path and cached version
    # useful to make sure we are not carrying around old versions
    - npx cypress cache path
    - npx cypress cache list
    #- $(npm bin)/print-env CI
    - npm run cy:verify
    - npm run cy:info

# all jobs that actually run tests can use the same definition
.job_template1:
  image: cypress/browsers:node14.15.0-chrome86-ff82
  stage: test
  script:
    - npm ci
    # run Cypress test in load balancing mode
    - npx cypress run --browser chrome --headless --config viewportWidth=375,viewportHeight=667 --record --key cypress_demo --parallel --ci-build-id $CI_CONCURRENT_ID
    - npx nyc report --reporter=text-summary
  artifacts:
    when: always
    paths:
      - coverage
      - mochawesome-report
    expire_in: 10 day

.job_template2:
  image: cypress/browsers:node14.15.0-chrome86-ff82
  stage: test
  script:
    - npm i
    # run Cypress test in load balancing mode
    - npx cypress run --browser chrome --headless --record --key cypress_demo --parallel --ci-build-id $CI_CONCURRENT_ID
    - npx nyc report --reporter=text-summary
  artifacts:
    when: always
    paths:
      - coverage
      - mochawesome-report
    expire_in: 10 day

.job_template3:
  image: cypress/browsers:node14.15.0-chrome86-ff82
  stage: test
  script:
    - npm i
    # run Cypress test in load balancing mode
    - npx cypress run --browser firefox --headless --record --key cypress_demo --parallel --ci-build-id $CI_CONCURRENT_ID
    - npx nyc report --reporter=text-summary
  artifacts:
    when: always
    paths:
      - coverage
      - mochawesome-report
    expire_in: 10 day

# actual job definitions
# all steps are the same, they come from the template above
chrome-desktop:
  extends: .job_template1
chrome-mobile:
 extends:  .job_template2
firefox-desktop:
 extends:  .job_template3
#chrome-4:
#  extends: .job_template
#chrome-5:
#  extends: .job_template
